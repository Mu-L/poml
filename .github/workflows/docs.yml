name: Deploy Documentation

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for versioning

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Node dependencies
        run: npm ci

      - name: Install Python dependencies
        run: |
          pip install -e ".[dev]"  # Install poml with dev dependencies

      - name: Generate component documentation
        run: npm run generate-component-spec

      - name: Generate TypeScript API documentation
        run: npx typedoc

      - name: Configure Git for Mike
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Documentation version: $VERSION"

      - name: Build documentation
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            # Tagged release - deploy as versioned docs
            VERSION="${{ steps.version.outputs.VERSION }}"
            mike deploy --push --update-aliases $VERSION stable
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # Main branch - deploy as dev docs
            mike deploy --push latest
            mike set-default --push latest
          else
            # PR or other branch - just build without deploying
            mkdocs build
          fi

  deploy:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4